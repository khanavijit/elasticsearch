/*buildscript {
	repositories {
		mavenLocal()
		maven { url "https://repo1.maven.org/maven2" }
	}
	dependencies {
		classpath "org.openapitools:openapi-generator-gradle-plugin:5.1.1"
	}

}*/

plugins {
	id 'org.springframework.boot' version '2.5.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id "org.openapi.generator" version "5.1.1"
	id 'java'
	id 'scala'
}

group = 'com.avijit.projects'
version = '1.0.0'
sourceCompatibility = '16'

repositories {
	mavenLocal()
	mavenCentral()
	jcenter()

}



dependencies {
	implementation "io.springfox:springfox-boot-starter:3.0.0"
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation "io.springfox:springfox-swagger-ui:3.0.0"
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'commons-io:commons-io:2.6'
	implementation 'org.projectlombok:lombok:1.18.20'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.gatling.highcharts:gatling-charts-highcharts:3.6.1'
	annotationProcessor 'org.projectlombok:lombok:1.18.20'
	implementation 'com.google.code.gson:gson:2.8.8'
	implementation 'io.swagger.parser.v3:swagger-parser-v3:2.0.28'
	implementation "org.openapitools:jackson-databind-nullable:0.2.1"
	implementation 'org.modelmapper:modelmapper:2.1.1'
	implementation 'com.github.javafaker:javafaker:1.0.2'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'com.hazelcast:hazelcast'
	implementation 'com.hazelcast:hazelcast-spring'

}

//apply plugin: 'org.openapi.generator'

test {
	useJUnitPlatform()
}

openApiGenerate {
	generatorName = "spring"
	inputSpec = "$rootDir/src/main/resources/static/openapi.json".toString()
	outputDir = "$buildDir/generated".toString()
	apiPackage = "org.avijit.projects.generated.api"
	invokerPackage = "org.avijit.projects.generated.invoker"
	modelPackage = "org.avijit.projects.generated.model"
	configOptions = [
			dateLibrary: "java8",
			interfaceOnly: "true"
	]
}

compileJava.dependsOn tasks.openApiGenerate
sourceSets.main.java.srcDir "$buildDir/generated/src/main/java"
sourceSets.main.resources.srcDir "$buildDir/generated/src/main/resources"

task testLoad(type: JavaExec) {
	description = 'Test load the Spring Boot web service with Gatling'
	group = 'Load Test'
	classpath = sourceSets.test.runtimeClasspath
	jvmArgs = [
			"-Dgatling.core.directory.binaries=${sourceSets.test.output.classesDirs.toString()}",
			"-Dlogback.configurationFile=${logbackGatlingConfig()}"
	]
	main = 'io.gatling.app.Gatling'
	args = [
			'--simulation', 'webservice.gatling.simulation.WebServiceCallSimulation',
			'--results-folder', "${buildDir}/gatling-results",
			'--binaries-folder', sourceSets.test.output.classesDirs.toString() // ignored because of above bug
	]
}

def logbackGatlingConfig() {
	return sourceSets.test.resources.find { it.name == 'logback-gatling.xml'};
}